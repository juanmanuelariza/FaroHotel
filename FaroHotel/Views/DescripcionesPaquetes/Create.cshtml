@model FaroHotel.Models.TipoDescripcionPaquete

@{
    Layout = null;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="row">
            <div class="col-md-12">
                <div class="form-group row">
                    <label class="control-label col-md-2 col-md-offset-1" for="Titulo">Titulo:</label>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-12">
                        @Html.TextAreaFor(model => model.Descripcion, new { @id="TextEditor", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>



    </div>
}

<script>
    //Click "Guardar"
    $("#btnGuardar").unbind();
    $("#btnGuardar").click(function () {
        //debugger
        $('#TextEditor').text(tinyMCE.get('TextEditor').getContent());
        alert("click");
        $('#contenidoModal form').submit();
    });

    //Submit
    $('form').submit(function () {
        //debugger
        alert("submit");
        if ($(this).valid()) {
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                beforeSend: function (xhr) {
                    abrirWaiting();
                },
                success: function (result) {
                    debugger
                    cerrarWaiting();
                    if (result.ok) {
                        cerrarModal();
                        window.location.href = window.location.href;
                        return;
                    }
                    $('#contenidoModal').html(result);
                },
                error: function () {
                    cerrarWaiting();
                }
            });
        }
        return false;
    });
    tinymce.init({
        selector: "textarea#TextEditor",
        theme: "modern",
        plugins: [
             "advlist autolink link image lists charmap print preview hr anchor pagebreak spellchecker",
             "searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking",
             "save table contextmenu directionality emoticons template paste textcolor"
        ]
    });
</script>